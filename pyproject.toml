[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
]

[project]
name = "apig-wsgi"
version = "2.19.0"
description = "Wrap a WSGI application in an AWS Lambda handler function for running on API Gateway or an ALB."
readme = "README.rst"
keywords = [
  "API Gateway",
  "APIG",
  "AWS",
  "Lambda",
]
authors = [
  { name = "Adam Johnson", email = "me@adamj.eu" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
urls.Changelog = "https://github.com/adamchainz/apig-wsgi/blob/main/CHANGELOG.rst"
urls.Funding = "https://adamj.eu/books/"
urls.Repository = "https://github.com/adamchainz/apig-wsgi"

[tool.isort]
add_imports = [
  "from __future__ import annotations",
]
force_single_line = true
profile = "black"
src_paths = [
  ".",
  "example/app",
  "src",
]

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    """
xfail_strict = true

[tool.coverage.run]
branch = true
parallel = true
source = [
  "apig_wsgi",
  "tests",
]

[tool.coverage.paths]
source = [
  "src",
  ".tox/**/site-packages",
]

[tool.coverage.report]
show_missing = true

[tool.mypy]
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
mypy_path = "src/"
namespace_packages = false
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.rstcheck]
report_level = "ERROR"
